name: CI-Production
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_USER_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
  ANALYZE: ${{ secrets.ANALYZE }}
  NEXT_PUBLIC_GA_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_GA_MEASUREMENT_ID }}
  NEXT_PUBLIC_SERVICE_ID: ${{ secrets.NEXT_PUBLIC_SERVICE_ID }}
  NEXT_PUBLIC_ZOOM_PUBLISH_URL: ${{ secrets.NEXT_PUBLIC_ZOOM_PUBLISH_URL }}
  NEXT_PUBLIC_ZOOM_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_ZOOM_CLIENT_ID }}

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # caching Dependencies and Build Artifacts
  install:
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.16.0-chrome105-ff104-edge
      options: --user 1001
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress install
        uses: cypress-io/github-action@v5
        with:
          runTests: false
      # report machine parameters
      - run: yarn cypress info
      - run: node --version
      - run: node -p 'os.cpus()'
      - run: yarn lint
      - run: yarn build:ci

      - name: Save build folder
        uses: actions/upload-artifact@v3
        with:
          name: build
          if-no-files-found: error
          path: .next

  install-windows:
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          # The default install for the job is node 18+
          # which has some compatibility issues with openSSL inside this windows job.
          # Node 18 updated with OpenSSL provider which causes this compatibility issue
          # downgrading node to v16 to use the openssl-legacy-provider by default to prevent this issue
          node-version: '16'

      - name: Cypress install
        uses: cypress-io/github-action@v5
        with:
          runTests: false
      # report machine parameters
      - run: yarn cypress info
      - run: node -p 'os.cpus()'
      - run: yarn lint
      - run: yarn build:ci

      - name: Save build folder
        uses: actions/upload-artifact@v3
        with:
          name: build
          if-no-files-found: error
          path: .next

  # run cypress test on chrome
  ui-chrome-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.16.0-chrome105-ff104-edge
      options: --user 1001
    needs: install
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving Cypress Cloud hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download the build folders
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .next

      - name: Cypress info
        run: npx cypress info

      - name: Node info
        run: node -v

      - name: __e Dir
        run: ls /__e

      - name: 'UI Tests - Chrome'
        uses: cypress-io/github-action@v5
        with:
          start: yarn start:ci
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          browser: chrome
          record: true
          parallel: true
          group: 'UI - Chrome'
          spec: cypress/e2e/*
          config-file: cypress.config.js
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG: 'cypress:server:args'

  ui-chrome-mobile-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.16.0-chrome105-ff104-edge
      options: --user 1001
    needs: install
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving Cypress Cloud hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download the build folders
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .next

      - name: 'UI Tests - Chrome - Mobile'
        uses: cypress-io/github-action@v5
        with:
          config: 'viewportWidth=375,viewportHeight=667'
          start: yarn start:ci
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          browser: chrome
          record: true
          parallel: true
          group: 'UI - Chrome - Mobile'
          spec: cypress/e2e/*
          config-file: cypress.config.js
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # run cypress test on firefox
  ui-firefox-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.16.0-chrome105-ff104-edge
      options: --user 1001
    needs: install
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving Cypress Cloud hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download the build folders
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .next

      - name: 'UI Tests - Firefox'
        uses: cypress-io/github-action@v5
        with:
          start: yarn start:ci
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          browser: firefox
          record: true
          parallel: true
          group: 'UI - Firefox'
          spec: cypress/e2e/*
          config-file: cypress.config.js
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  ui-firefox-mobile-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.16.0-chrome105-ff104-edge
      options: --user 1001
    needs: install
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving Cypress Cloud hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download the build folders
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .next

      - name: 'UI Tests - Firefox - Mobile'
        uses: cypress-io/github-action@v5
        with:
          config: 'viewportWidth=375,viewportHeight=667'
          start: yarn start:ci
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          browser: firefox
          record: true
          parallel: true
          group: 'UI - Firefox - Mobile'
          spec: cypress/e2e/*
          config-file: cypress.config.js
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  ui-windows-tests:
    timeout-minutes: 40
    runs-on: windows-2022
    needs: install-windows
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving Cypress Cloud hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download the build folders
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .next

      - name: 'UI Tests - Electron - Windows'
        uses: cypress-io/github-action@v5
        with:
          start: yarn start:ci
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          record: true
          parallel: true
          group: 'UI - Electron - Windows'
          spec: cypress/e2e/*
          config-file: cypress.config.js
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # production deployment on vercel
  deploy:
    needs: [install, ui-chrome-tests, ui-firefox-tests]
    name: Deploy-production
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  # run lighthouse audit
  lighthouse-audit:
    runs-on: ubuntu-latest
    name: Lighthouse-audit
    needs: [deploy, ui-chrome-tests]
    steps:
      - uses: actions/checkout@v3
      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://sid86.me
          budgetPath: ./budget.json # test performance budgets
          uploadArtifacts: true # save results as an action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage

  # merge main branch into prod after successfull deployment and test
  merge-branch:
    name: Merge-branch
    needs: [deploy, lighthouse-audit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Merge into prod
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: main
          target_branch: prod
          message: Merge main into prod
          github_token: ${{ secrets.GITHUB_TOKEN }}
