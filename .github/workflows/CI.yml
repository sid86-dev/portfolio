name: Project build CI
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_USER_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
  ANALYZE: ${{ secrets.ANALYZE }}
  NEXT_PUBLIC_GA_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_GA_MEASUREMENT_ID }}
  NEXT_PUBLIC_SERVICE_ID: ${{ secrets.NEXT_PUBLIC_SERVICE_ID }}
  NEXT_PUBLIC_ZOOM_PUBLISH_URL: ${{ secrets.NEXT_PUBLIC_ZOOM_PUBLISH_URL }}
  NEXT_PUBLIC_ZOOM_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_ZOOM_CLIENT_ID }}

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # build:
  #   name: Build-Test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Set Node.js 16.x
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 16.x

  #     - name: Run install
  #       uses: borales/actions-yarn@v4
  #       with:
  #         cmd: install # will run `yarn install` command

  #     - name: Build production bundle
  #       uses: borales/actions-yarn@v4
  #       with:
  #         cmd: build # will run `yarn build:prod` command

  deploy:
    # needs: build
    name: Deploy-Production
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
